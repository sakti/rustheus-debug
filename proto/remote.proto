syntax = "proto3";

package prometheus;

option go_package = "prompb";

import "google/protobuf/timestamp.proto";

message WriteRequest {
  repeated TimeSeries timeseries = 1;
  repeated MetricMetadata metadata = 3;
}

message ReadRequest {
  repeated Query queries = 1;
  repeated ReadHints accepted_response_types = 2;
}

message ReadResponse {
  repeated QueryResult results = 1;
}

message Query {
  int64 start_timestamp_ms = 1;
  int64 end_timestamp_ms = 2;
  repeated LabelMatcher matchers = 3;
  ReadHints hints = 4;
}

message QueryResult {
  repeated TimeSeries timeseries = 1;
}

message Sample {
  double value = 1;
  int64 timestamp = 2;
}

message Exemplar {
  repeated Label labels = 1;
  double value = 2;
  int64 timestamp = 3;
}

message Histogram {
  enum ResetHint {
    UNKNOWN = 0; // Need to test for a counter reset explicitly.
    YES = 1;     // This is the 1st histogram after a counter reset.
    NO = 2;      // There was no counter reset between this and the previous Histogram.
    GAUGE = 3;   // This is a gauge histogram where counter resets don't happen.
  }

  oneof count {
    uint64 count_int = 1;
    double count_float = 2;
  }
  double sum = 3;
  uint32 schema = 4;
  double zero_threshold = 5;
  oneof zero_count {
    uint64 zero_count_int = 6;
    double zero_count_float = 7;
  }
  repeated BucketSpan negative_spans = 8;
  repeated int64 negative_deltas = 9;
  repeated BucketSpan positive_spans = 10;
  repeated int64 positive_deltas = 11;
  ResetHint reset_hint = 12;
  int64 timestamp = 13;
}

message BucketSpan {
  int32 offset = 1;
  uint32 length = 2;
}

message TimeSeries {
  repeated Label labels = 1;
  repeated Sample samples = 2;
  repeated Exemplar exemplars = 3;
  repeated Histogram histograms = 4;
}

message Label {
  string name = 1;
  string value = 2;
}

message Labels {
  repeated Label labels = 1;
}

message LabelMatcher {
  enum Type {
    EQ = 0;
    NEQ = 1;
    RE = 2;
    NRE = 3;
  }
  Type type = 1;
  string name = 2;
  string value = 3;
}

message ReadHints {
  int64 step_ms = 1;
  string func = 2;
  int64 start_ms = 3;
  int64 end_ms = 4;
  repeated string grouping = 5;
  bool by = 6;
  int64 range_ms = 7;
}

message MetricMetadata {
  enum MetricType {
    UNKNOWN = 0;
    COUNTER = 1;
    GAUGE = 2;
    HISTOGRAM = 3;
    GAUGEHISTOGRAM = 4;
    SUMMARY = 5;
    INFO = 6;
    STATESET = 7;
  }

  MetricType type = 1;
  string metric_family_name = 2;
  string help = 4;
  string unit = 5;
}
